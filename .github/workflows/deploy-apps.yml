name: Build and Deploy APIs

on:
  push:
    branches:
      - main # Or your default branch
    paths:
      - 'src/**'
      - '**/AppInsightsDemo.*Api.csproj' # Trigger on project file changes
  workflow_dispatch:

permissions:
  id-token: write # Required for Workload Identity Federation
  contents: read  # Required to checkout the code

env:
  DOTNET_VERSION: '9.0.x' # Specify your .NET version
  OMEGA_API_PROJECT_PATH: src/AppInsightsDemo/AppInsightsDemo.OmegaApi/AppInsightsDemo.OmegaApi.csproj
  PSI_API_PROJECT_PATH: src/AppInsightsDemo/AppInsightsDemo.PsiApi/AppInsightsDemo.PsiApi.csproj

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: demo
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.11.4" # Specify the required Terraform version

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./infrastructure

      - name: Select or Create Terraform Workspace
        run: terraform workspace select app_insights_demo || terraform workspace new app_insights_demo
        working-directory: ./infrastructure

      # Example: 
      - name: Get Infra Outputs
        id: infra_outputs
        run: |
          terraform -chdir=./infrastructure init -backend=false
          terraform -chdir=./infrastructure workspace select app_insights_demo || terraform -chdir=./infrastructure workspace new app_insights_demo
          echo "AZURE_APP_SERVICE_NAME_OMEGA=$(terraform -chdir=./infrastructure output -raw app_service_omega_name)" >> $GITHUB_ENV
          echo "AZURE_APP_SERVICE_NAME_PSI=$(terraform -chdir=./infrastructure output -raw app_service_psi_name)" >> $GITHUB_ENV
          echo "AZURE_RESOURCE_GROUP=$(terraform -chdir=./infrastructure output -raw resource_group_name)" >> $GITHUB_ENV

      - name: Build and Publish OmegaApi
        run: |
          dotnet restore ${{ env.OMEGA_API_PROJECT_PATH }}
          dotnet build ${{ env.OMEGA_API_PROJECT_PATH }} --configuration Release --no-restore
          dotnet publish ${{ env.OMEGA_API_PROJECT_PATH }} --configuration Release --no-build --output ./publish-omega

      - name: Deploy OmegaApi to Azure App Service
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_APP_SERVICE_NAME_OMEGA }}
          package: ./publish-omega
          resource-group-name: ${{ env.AZURE_RESOURCE_GROUP }}

      - name: Build and Publish PsiApi
        run: |
          dotnet restore ${{ env.PSI_API_PROJECT_PATH }}
          dotnet build ${{ env.PSI_API_PROJECT_PATH }} --configuration Release --no-restore
          dotnet publish ${{ env.PSI_API_PROJECT_PATH }} --configuration Release --no-build --output ./publish-psi

      - name: Deploy PsiApi to Azure App Service
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_APP_SERVICE_NAME_PSI }}
          package: ./publish-psi
          resource-group-name: ${{ env.AZURE_RESOURCE_GROUP }}
